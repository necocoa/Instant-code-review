#post_title.mb-3
  h1 = @post.title

#post_content
  .mb-5
    .pb-3 投稿者: #{@post.user.name}
    .p-2 = markdown_to_html(@post.body)

    - if @post.user == current_user
      = link_to '削除', @post, method: :delete, class: 'btn btn-danger', data: { confirm: '投稿を削除しますか？' }

#post_review
  h3.mb-3
    | レビュー
    span.text-danger =<> @post_reviews.length
    | 件
  .mb-3.border-top.border-bottom
    ul.list-group.list-group-flush
      - @post_reviews.each do |post_review|
        li.list-group-item
          .my-3 = markdown_to_html(post_review.body)
          .my-3.d-flex.justify-content-end.small
            . id="post_review_like_#{post_review.id}"
              = render '/post_review_likes/like', post_review: post_review
            - if post_review.user == current_user
              .mr-3
                = link_to [@post, post_review], method: :delete, class: 'text-muted', data: { confirm: 'レビューを削除しますか？' } do
                  i.fas.fa-trash
            .mr-3 = "投稿 #{l(post_review.created_at, format: :long)}"
            . = post_review.user.name
          - if user_signed_in? || post_review.comments.exists?
            .ml-5.pt-3.pl-5.border-top
              - post_review.comments.each do |comment|
                .mb-2
                  .mb-1.d-flex.small
                    - if comment.user == post_review.user
                      .pr-2: i.fas.fa-user-tie
                    - elsif comment.user == @post.user
                      .pr-2: i.fas.fa-user
                    .pr-2.font-weight-bold = comment.user.name
                    .pr-2 = l(post_review.created_at, format: :long)
                    - if comment.user == current_user
                      = link_to [@post, post_review, comment], method: :delete, class: 'text-muted', data: { confirm: 'コメントを削除しますか？' }
                        i.fas.fa-trash
                  . = comment.body
              - if user_signed_in?
                . = form_with model: [@post, post_review, @post_review_comments], local: true do |f|
                  - if post_review == @post_review_comments.post_review
                    = render 'shared/form_errors', resource: @post_review_comments
                  .form-group
                    = f.text_area :body, class: 'form-control', required: true
                  .form-group.d-flex.justify-content-end
                    = f.submit 'コメントする', class: 'btn btn-primary'

- if user_signed_in? && @post.user != current_user
  #post_review_form
    .pb-3.mb-2
      = form_with model: [@post, @post_review], local: true do |f|
        = render 'shared/form_errors', resource: @post_review
        .form-group
          = f.label :body
          = f.text_area :body, class: 'form-control', required: true, placeholder: "レビュー内容を入力してください\n※Markdown記法が利用できます"
        .form-group
          = f.submit 'レビューする', class: 'btn btn-primary'
